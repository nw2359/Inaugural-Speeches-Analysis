docs <- Corpus(DirSource(folder.path))
sens <- get_sentences(docs)
docs
docs <- Corpus(DirSource(folder.path))
get_sentences(docs)
sentences <- sent_detect(docs[1], endmarks = c("?",".","!"))
length(sens)
docs[1]
View(docs[1])
inspect(docs[1])
docs1 <- read.csv("/Users/ouminamikun/Desktop/Columbia/Spring 2017/ADS/Basic Text Mining/Data/inaugurals/inaugAbrahamLincoln-1.txt")
sentences <- sent_detect(docs1, endmarks = c("?",".","!"))
length(sens)
sentences
docs.sum <- summary(docs)
docs.sum
data(crude, package = "tm")
mycorpus <- Corpus(crude)
data(crude, package = "tm")
mycorpus <- corpus(crude)
install.packages("quanteda")
library(quanteda)
nsentence(docs[1])
d1 <- read.table("/Users/ouminamikun/Desktop/Columbia/Spring 2017/ADS/Basic Text Mining/Data/inaugurals/inaugAbrahamLincoln-1.txt")
nsentence(d1)
head(d1)
View(d1)
d1 <- scan("/Users/ouminamikun/Desktop/Columbia/Spring 2017/ADS/Basic Text Mining/Data/inaugurals/inaugAbrahamLincoln-1.txt")
li <- list(x,y,z)
li <- list(1,2,3)
nrow(li)
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "factoextra",
"beeswarm", "scales", "RColorBrewer",
"RANN", "tm", "topicmodels")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
nomin.list=read.csv("../data/nominlist.csv", stringsAsFactors = FALSE)
farewell.list=read.csv("../data/farewelllist.csv", stringsAsFactors = FALSE)
head(inaug.list)
head(nomin.list)
speech.list=rbind(inaug.list, nomin.list, farewell.list)
speech.list$type=c(rep("inaug", nrow(inaug.list)),
rep("nomin", nrow(nomin.list)),
rep("farewell", nrow(farewell.list)))
speech.url=rbind(inaug, nomin, farewell)
### Inauguaral speeches
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
#head(inaug)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#### Nomination speeches
main.page=read_html("http://www.presidency.ucsb.edu/nomination.php")
# Get link URLs
nomin <- f.speechlinks(main.page)
#head(nomin)
#
#### Farewell speeches
main.page=read_html("http://www.presidency.ucsb.edu/farewell_addresses.php")
# Get link URLs
farewell <- f.speechlinks(main.page)
#head(farewell)
head(inaug)
speech.list=rbind(inaug.list, nomin.list, farewell.list)
speech.list$type=c(rep("inaug", nrow(inaug.list)),
rep("nomin", nrow(nomin.list)),
rep("farewell", nrow(farewell.list)))
speech.url=rbind(inaug, nomin, farewell)
speech.list=cbind(speech.list, speech.url)
head(speech.list)
read_html("http://www.presidency.ucsb.edu/ws/index.php?pid=25800")
read_html("http://www.presidency.ucsb.edu/ws/index.php?pid=25800") %>% html_nodes(".displaytext") %>% html_text()
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
source("../lib/plotstacked.R")
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
source("../Lib/plotstacked.R")
source("../Lib/speechFuncs.R")
mainPage <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaugual <- f.speechlinks(mainPage)
mainPage <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaugual <- f.speechlinks(mainPage)
mainPage <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaugual <- f.speechlinks(mainPage)
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
#head(inaug)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#mainPage <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
#inaugual <- f.speechlinks(mainPage)
#as.Date(inaugual[,1], format = "%B %e %y")
#inaugual <- inaugual[-nrow(inaugual),]
#main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
#inaug=f.speechlinks(main.page)
#head(inaug)
mainPage <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaugual <- f.speechlinks(mainPage)
#as.Date(inaugual[,1], format = "%B %e %y")
#inaugual <- inaugual[-nrow(inaugual),]
mainPage <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaugual <- f.speechlinks(mainPage)
inaugual
inaugual$links
nrow(inaugual)
inaug.cvs <- read.csv("../Data/inauglist.csv", stringsAsFactors = F)
inaug.cvs <- read.csv("../Data/inauglist.csv", stringsAsFactors = F)
mainPage <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaugual <- f.speechlinks(mainPage)
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
source("../Lib/plotstacked.R")
source("../Lib/speechFuncs.R")
mainPage <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaugual <- f.speechlinks(mainPage)
mainPage <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaugual <- f.speechlinks(mainPage)
mainPage <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaugual <- f.speechlinks(mainPage)
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
urls <- main.page %>%
html_node(".ver12 a") %>%
html_attr("herf")
links <- main.page %>%
html_node(".ver12 a") %>%
html_text()
inaugural <- data.frame(links = links, urls = urls, stringsAsFactors = F)
inaugual <- inaugual[-nrow(inaugual),]
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
urls <- main.page %>%
html_node(".ver12 a") %>%
html_attr("herf")
links <- main.page %>%
html_node(".ver12 a") %>%
html_text()
inaugural <- data.frame(links = links, urls = urls, stringsAsFactors = F)
inaugural <- inaugual[-nrow(inaugual),]
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
urls <- main.page %>%
html_node(".ver12 a") %>%
html_attr("herf")
links <- main.page %>%
html_node(".ver12 a") %>%
html_text()
inaugural <- data.frame(links = links, urls = urls, stringsAsFactors = F)
inaugural <- inaugual[-nrow(inaugural),]
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
urls <- main.page %>%
html_node(".ver12 a") %>%
html_attr("herf")
links <- main.page %>%
html_node(".ver12 a") %>%
html_text()
inaugural <- data.frame(links = links, urls = urls, stringsAsFactors = F)
inaugural <- inaugural[-nrow(inaugural),]
head(inaugural)
urls
links
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
urls <- main.page %>%
html_node(".ver12 a") %>%
html_attr("herf")
links <- main.page %>%
html_node(".ver12 a") %>%
html_text()
inaugural <- data.frame(links = links, urls = urls, stringsAsFactors = F)
head(inaugural)
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
urls <- main.page %>%
html_node(".ver12 a") %>%
html_attr("herf")
links <- main.page %>%
html_node(".ver12 a") %>%
html_text()
inaugural <- data.frame(links = links, urls = urls, stringsAsFactors = F)
head(inaugural)
inaugural
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
urls <- html.page %>% # feed `main.page` to the next step
html_nodes(node.type) %>% # get the CSS nodes
html_attr("href") # extract the URLs
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
urls <- main.page %>% # feed `main.page` to the next step
html_nodes(".ver12 a") %>% # get the CSS nodes
html_attr("href") # extract the URLs
# Get link text
links <- main.page %>% # feed `main.page` to the next step
html_nodes(".ver12 a") %>% # get the CSS nodes
html_text() # extract the link text
# Combine `links` and `urls` into a data.frame
out <- data.frame(links = links, urls = urls, stringsAsFactors = FALSE)
out
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
urls <- main.page %>%
html_nodes(".ver12 a") %>%
html_attr("href")
links <- main.page %>%
html_nodes(".ver12 a") %>%
html_text()
out <- data.frame(links = links, urls = urls, stringsAsFactors = FALSE)
inaugural <- out[-nrow(out),]
head(inaugural)
inaug.cvs <- read.csv("../Data/inauglist.csv", stringsAsFactors = F)
adresses <- rbind(inaug.cvs, inaugural)
adresses <- cbind(inaug.cvs, inaugural)
View(adresses)
addresses <- cbind(inaug.cvs, inaugural)
inaug.cvs <- read.csv("../Data/inauglist.csv", stringsAsFactors = F)
addresses <- cbind(inaug.cvs, inaugural)
addresses$fulltext <- NULL
for(i in 1:nrow(addresses)){
text <- read_html(addresses$urls[i]) %>%
html_node(".displaytext") %>%
html_text()
addresses$fulltext[i] <- text
}
View(addresses)
sentences <- sent_detect(addresses$fulltext[1])
length(sentences)
sentences <- sent_detect(addresses$fulltext[1], endmarks = c("?",".","!"))
length(sentences)
sentences <- sent_detect(addresses$fulltext[58], endmarks = c("?",".","!"))
length(sentences)
sentences <- sent_detect(addresses$fulltext[4], endmarks = c("?",".","!"))
length(sentences)
sentences <- sent_detect(addresses$fulltext[7], endmarks = c("?",".","!"))
length(sentences)
sentences <- sent_detect(addresses$fulltext[7], endmarks = c("?",".","!"))
length(sentences)
addresses$Words[1]
sentences <- sent_detect(addresses$fulltext[1], endmarks = c("?",".","!"))
length(sentences)
addresses$Words[1]
addresses$sentences <-NULL
for(i in 1:norm(addresses)){
sent.len <- sent_detect(addresses$fulltext[i],
endmarks = c("?",".","!","|",";"))
addresses$sentences[i] <- length(sent.len)
}
addresses$sentences <-NULL
for(i in 1:nrow(addresses)){
sent.len <- sent_detect(addresses$fulltext[i],
endmarks = c("?",".","!","|",";"))
addresses$sentences[i] <- length(sent.len)
}
View(addresses)
plot(x = addresses$President, y = addresses$Words/addresses$sentences)
plot(x = c(1:58), y = addresses$Words/addresses$sentences)
plot(x = c(1:58), y = addresses$Words/addresses$sentences, type = "l")
ggplot() + geom_line(mapping = aes(x = c(1:58), y = addresses$Words/addresses$sentences))
ggplot() + geom_line(mapping = aes(x = c(1:58), y = addresses$Words/addresses$sentences), col = "blue", xlab = "Inaugural Speeches", ylab = "Words/Sentences")
ggplot() + geom_line(mapping = aes(x = c(1:58), y = addresses$Words/addresses$sentences), col = "blue", xlab("Inaugural Speeches"), ylab("Words/Sentences"))
ggplot() +
geom_line(mapping = aes(x = c(1:58),
y = addresses$Words/addresses$sentences,
col = "blue",
xlab = "",
ylab = "") )
ggplot() +
geom_line(mapping = aes(x = c(1:58),
y = addresses$Words/addresses$sentences,
col = "blue")
+labs(title = "Words/Sentences", x = "Presidents")
ggplot() +
geom_line(mapping = aes(x = c(1:58),
y = addresses$Words/addresses$sentences,
col = "blue"))+
labs(title = "Words/Sentences", x = "Presidents")
ggplot() +
geom_line(mapping = aes(x = c(1:58),
y = addresses$Words/addresses$sentences,
col = "blue"))+
labs(title = "Words/Sentences", x = "Presidents", y = "")
install.packages("koRpus")
library(koRpus)
tagged.inaug <- tokenize("../Data/inaugurals/inaugAbrahamLincoln-1.txt")
library(koRpus)
tagged.inaug <- tokenize("../Data/inaugurals/inaugAbrahamLincoln-1.txt", lang = "en")
library(koRpus)
tagged.inaug <- tokenize(addresses$fulltext[1], lang = "en")
?tokenize
tagged.inaug <- tokenize(addresses$fulltext[1], format = "obj", lang = "en")
taggedText(tagged.inaug)
tagged.inaug <- tokenize(addresses$fulltext[1], format = "obj", lang = "en")
taggedText(tagged.inaug)
lex.div(tagged.inaug)
MSTTR(tagged.inaug)
M <- MSTTR(tagged.inaug)
M$MSTTR
M[MSTTR]
M[2]$MSTTR
M[[2]]$MSTTR
typeof(M)
getSlots(M)
list(M)
M@MSTTR
M
?lapply
tagg <- lapply(addresses$fulltext, tokenize, format = "obj", lang = "en")
head(tagg)
M.inaug <- lapply(tagged.inaug, MSTTR)
length(tagged.inaug)
tagged.inaug[[5]]
tagged.inaug[1]
tagged.inaug <- sapply(addresses$fulltext, tokenize, format = "obj", lang = "en")
tagged.inaug <- NULL
for(i in 1:nrow(addresses)){
tagged.inaug[i] <- tokenize(addresses$fulltext[i], format = "obj", lang = "en")
}
tagged.inaug <- list(NULL)
for(i in 1:nrow(addresses)){
tagged.inaug[i] <- tokenize(addresses$fulltext[i], format = "obj", lang = "en")
}
tagged.inaug[[1]]
length(tagged.inaug)
MSTTR.inaug <- list(NULL)
for(i in 1:length(tagged.inaug)){
MSTTR.inaug[i] <- MSTTR(tagged.inaug[i])
}
MSTTR.inaug <- NULL
for(i in 1:length(tagged.inaug)){
MSTTR.inaug[i] <- MSTTR(tagged.inaug[i])
}
?MSTTR
MSTTR.inaug <- NULL
for(i in 1:length(tagged.inaug)){
MSTTR.inaug[i] <- MSTTR(addresses$fulltext[i])
}
tagged.inaug <- list(NULL)
for(i in 1:nrow(addresses)){
tagged.inaug[[i]] <- tokenize(addresses$fulltext[i], format = "obj", lang = "en")
}
tagged.inaug[[3]]
tokenize("/Users/ouminamikun/Desktop/Columbia/Spring 2017/ADS/Basic Text Mining/Data/inaugurals/inaugAbrahamLincoln-1.txt", lang = "en")
MSTTR.inaug <- NULL
for(i in 1:length(tagged.inaug)){
MSTTR.inaug[i] <- MSTTR(tagged.inaug[[i]])
}
MSTTR.inaug <- NULL
for(i in 1:length(tagged.inaug)){
MSTTR.inaug[[i]] <- MSTTR(tagged.inaug[[i]])
}
MSTTR(tagged.inaug[[1]])
MSTTR(tagged.inaug[[2]])
MSTTR.inaug <- NULL
for(i in 1:length(tagged.inaug)){
MSTTR.inaug[[i]] <- as.list(MSTTR(tagged.inaug[[i]]))
}
MSTTR.inaug <- NULL
for(i in 1:length(tagged.inaug)){
MSTTR.inaug[[i]] <- MSTTR(tagged.inaug[[i]])@MSTTR$MSTTR
}
MSTTR.inaug
library("rvest")
library("tibble")
library("qdap")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
MSTTR.inaug <- NULL
for(i in 1:length(tagged.inaug)){
MSTTR.inaug[i] <- MSTTR(tagged.inaug[[i]])@MSTTR$MSTTR
}
ggplot() + geom_line(mapping = aes(x = c(1:58), y = MSTTR.inaug, col = "blue"))+
labs(title = "Lixical Richness", x = "Presidents", y = "MSTTR")
addresses$sentences <-NULL
for(i in 1:nrow(addresses)){
sent.len <- sent_detect(addresses$fulltext[i],
endmarks = c("?",".","!","|",";"))
addresses$sentences[i] <- length(sent.len)
}
ggplot() +
geom_line(mapping = aes(x = c(1:58),
y = addresses$Words/addresses$sentences,
col = "blue"))+
labs(title = "Words/Sentences", x = "Presidents", y = "")
addresses$sentences <-NULL
for(i in 1:nrow(addresses)){
sent.len <- sent_detect(addresses$fulltext[i],
endmarks = c("?",".","!","|",";"))
addresses$sentences[i] <- length(sent.len)
}
pre.name <- addresses$President
ggplot() +
geom_line(mapping = aes(x = c(1:58),
y = addresses$Words/addresses$sentences,
col = "blue"))+
labs(title = "Words/Sentences", x = "Presidents", y = "")+
scale_x_discrete(labels = pre.names)
addresses$sentences <-NULL
for(i in 1:nrow(addresses)){
sent.len <- sent_detect(addresses$fulltext[i],
endmarks = c("?",".","!","|",";"))
addresses$sentences[i] <- length(sent.len)
}
pre.names <- addresses$President
ggplot() +
geom_line(mapping = aes(x = c(1:58),
y = addresses$Words/addresses$sentences,
col = "blue"))+
labs(title = "Words/Sentences", x = "Presidents", y = "")+
scale_x_discrete(labels = pre.names)
addresses$sentences <-NULL
for(i in 1:nrow(addresses)){
sent.len <- sent_detect(addresses$fulltext[i],
endmarks = c("?",".","!","|",";"))
addresses$sentences[i] <- length(sent.len)
}
pre.names <- as.character(addresses$President)
ggplot() +
geom_line(mapping = aes(x = c(1:58),
y = addresses$Words/addresses$sentences,
col = "blue"))+
labs(title = "Words/Sentences", x = "Presidents", y = "")+
scale_x_discrete(labels = pre.names)
View(addresses)
